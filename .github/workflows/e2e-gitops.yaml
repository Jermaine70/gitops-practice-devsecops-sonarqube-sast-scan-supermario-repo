name: "Run SAST, Build and push supermario image, scan image, Update deployment and version files"

on:
  push:
    branches:
      - main

jobs:
  set_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set.outputs.version }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Read and increment version
        id: set
        run: |
          VERSION=$(( $(cat version.txt) + 1 ))
          echo "$VERSION" > version.txt
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Updated version.txt to $VERSION"

  sonarqube_sast_scan:
    runs-on: ubuntu-latest
    needs: set_version

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_push_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: [sonarqube_sast_scan, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t docker.io/jermainejordan/supermariogitopsproject:${VERSION} .
          docker push docker.io/jermainejordan/supermariogitopsproject:${VERSION}

  run_container_image_scan_on_supermario_docker_image:
    runs-on: ubuntu-latest
    needs: [build_push_supermario_docker_image, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Pull Docker Image from Docker Hub
        run: docker pull docker.io/jermainejordan/supermariogitopsproject:${VERSION}

      - name: Run Trivy vulnerability scanner on Docker image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: docker.io/jermainejordan/supermariogitopsproject:${{ env.VERSION }}
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

  update_k8s_yaml_version_file_with_latest_image_tag:
    runs-on: ubuntu-latest
    needs: [run_container_image_scan_on_supermario_docker_image, set_version]
    env:
      VERSION: ${{ needs.set_version.outputs.version }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Git Config
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL}}"
          git config --global user.name "${{ secrets.GIT_USERNAME}}"

      - name: Update Deployment YAML and version.txt
        run: |
          git pull
          sed -i "s|image: jermainejordan/supermariogitopsproject:.*$|image: jermainejordan/supermariogitopsproject:${VERSION}|" deployment.yaml
          echo "${VERSION}" > version.txt
          git add deployment.yaml version.txt
          git commit -m "Updated deployment YAML and version.txt to version ${VERSION}"
          git push
          